/**
 * Created with JetBrains RubyMine.
 * User: administrator
 * Date: 25/06/13
 * Time: 20:59
 * To change this template use File | Settings | File Templates.
 */

$(document).ready(function () {
    buildDataTable();
});

function buildDataTable() {
    /// Initialize filter controls
    $("#filtro_command").val("");

    $("#filtro_receita").val("N");
    $("#filtro_despesa").val("N");

    var fDataVencimentoIni = $('#filtro_DataVencimentoDe').datepicker({
        format: 'dd-mm-yyyy',
        autoclose: true,
        todaybtn: true,
        showButtonPanel: true,
        changeMonth: true,
        changeYear: true
    });

    var fDataVencimentoEnd = $('#filtro_DataVencimentoAte').datepicker({
        format: 'dd-mm-yyyy',
        autoclose: true,
        todaybtn: true,
        showButtonPanel: true,
        changeMonth: true,
        changeYear: true
    });

    var fDataAcaoIni = $('#filtro_DataAcaoDe').datepicker({
        format: 'dd-mm-yyyy',
        autoclose: true,
        todaybtn: true,
        showButtonPanel: true,
        changeMonth: true,
        changeYear: true
    });

    var fDataAcaoEnd = $('#filtro_DataAcaoAte').datepicker({
        format: 'dd-mm-yyyy',
        autoclose: true,
        todaybtn: true,
        showButtonPanel: true,
        changeMonth: true,
        changeYear: true
    });

    $('#tableResults tbody').delegate("tr", "click", rowClick);

    var fCategoria = $("#filtro_cateogira");
    var fCategoria2 = $("#filtro_cateogira2");

    var fCentrodeCusto = $("#filtro_centrodecusto");

    var fStatus = $("#filtro_status");

    var fValor = $("#filtro_valor");

    var oTable = $("#tableResults").dataTable({
        "sDom": 't<lp><i><r>T',
        "aaSorting": [
            [4, 'asc']
        ],
        "aoColumns": [
            {"bSortable": false},
            {"bSortable": false},
            {"bSortable": true},
            {"bSortable": true},
            {"bSortable": true},
            {"bSortable": true},
            {"bSortable": true},
            {"bSortable": true},
            {"bSortable": true}
        ],
        "bSort": true,
        "bSearchable": true,
        "bRegex": true,
        "bStateSave": true,
        "sPaginationType": 'full_numbers',
        "bServerSide": true,
        "bProcessing": true,
        "bDeferRender": true,
        "sAjaxSource": '<%= Rails.application.routes.url_helpers.filter_path %>',
        //"sAjaxSource": json,
        //"sAjaxDataProp": json.aaData,
        "fnServerParams": function (aoData) {
            aoData.push({ "name": "filtro_command", "value": $("#filtro_command").val()});
            aoData.push({ "name": "filtro_descricao", "value": $("#filtro_descricao").val()});
            aoData.push({ "name": "filtro_vencimento_ini", "value": $("#filtro_DataVencimentoDe").val()});
            aoData.push({ "name": "filtro_vencimento_final", "value": $("#filtro_DataVencimentoAte").val()});
            aoData.push({ "name": "filtro_receita", "value": $("#filtro_receita").val()});
            aoData.push({ "name": "filtro_despesa", "value": $("#filtro_despesa").val()});
            aoData.push({ "name": "filtro_valor", "value": $("#filtro_valor").val()});
            aoData.push({ "name": "filtro_categoria", "value": $("#filtro_categoria").val()});
            aoData.push({ "name": "filtro_centrodecusto", "value": $("#filtro_centrodecusto").val()});
            aoData.push({ "name": "filtro_status", "value": $("#filtro_status").val()});
        },
        "fnServerData": serverData,
        'oLanguage': {
            "sLengthMenu": "Exibir _MENU_ lançamentos por página",
            "sZeroRecords": "Nenhum registro encontrado",
            "sInfo": "Exibindo _START_ de _END_. Total: _TOTAL_ lançamentos.",
            "sInfoEmpty": "Exibindo 0 de 0. Total: 0 lançamentos",
            "sSearch": "Refinar busca:",
            "sInfoFiltered": "(filtrado de um total de _MAX_ lançamentos)",
            "oPaginate": {
                "sFirst": "<<",
                "sLast": ">>",
                "sNext": ">",
                "sPrevious": "<"
            }
        }
    });

    $('th').unbind('click.sorting');

    fCategoria2.select2({tags: ["a", "b", "c"]});

    fDataVencimentoIni.change(function () {
        oTable.fnDraw();
    });

    fDataVencimentoEnd.change(function () {
        oTable.fnDraw();
    });

    fValor.change(function () {
        oTable.fnDraw();
    });

    fCategoria.change(function () {
        oTable.fnDraw();
    });

    fCentrodeCusto.change(function () {
        oTable.fnDraw();
    });

    fStatus.change(function () {
        oTable.fnDraw();
    });
}

/******************************************************************************************
 * Função utilizada para gerenciar mais parametros enviados pelo servidor
 *****************************************************************************************/
function serverData(sSource, aoData, fnCallback)
{
    $.getJSON(sSource, aoData, function(json){
        fnCallback(json);

        /* Process remaining json params */
        $("#majorTotalPlace").html("<p>" + json.majorTotal + "</p>");

        return;
    });
}

var hlr = 0;   // Reference to the currently highlighted row

function rowClick()
{
    if (hlr)
        $("td:first", hlr).parent().children().each(function(){$(this).removeClass('mister-table-row-selected');});
    hlr = this;
    $("td:first", this).parent().children().each(function(){$(this).addClass('mister-table-row-selected');});

    // You can pull the values out of the row here if required
    /*
    var a = $("td:first", this).text();
    var b = $("td:eq(1)", this).text();
    alert("One = "+a+", Two = "+b);
    */
}

function defaultFilter() {
    $("#filtro_DataVencimentoDe").val("");
    $("#filtro_DataVencimentoAte").val("");
    $("#filtro_descricao").val("");

    $("#filtro_command").val("default_filter");

    //$("#tableResults").dataTable().fnDraw();
    refreshDataTable();s
}

function defaultSort() {
    $("#filtro_command").val("default_sort");
    //$("#tableResults").dataTable().fnDraw();
    refreshDataTable();
}

function receitaFilter() {
    var fReceita = $("#filtro_receita");
    if (fReceita.val() == "S") {
        fReceita.val("N");
    }
    else {
        fReceita.val("S");
    }

    //$("#tableResults").dataTable().fnDraw();
    refreshDataTable();
}

function despesaFilter() {
    var fDespesa = $("#filtro_despesa");
    if (fDespesa.val() == "S") {
        fDespesa.val("N");
    }
    else {
        fDespesa.val("S");
    }

    //$("#tableResults").dataTable().fnDraw();
    refreshDataTable();
}

function todayFilter() {
    inicio = '<%= Date.today.strftime('%d-%m-%Y') %>';
    fim = '<%= Date.today.strftime('%d-%m-%Y') %>';

    $("#filtro_DataVencimentoDe").val(inicio);
    $("#filtro_DataVencimentoAte").val(fim);

    //$("#tableResults").dataTable().fnDraw();
    refreshDataTable();
}

function weekFilter() {
    inicio = '<%= Date.today.beginning_of_week.strftime('%d-%m-%Y') %>';
    fim = '<%= Date.today.end_of_week.strftime('%d-%m-%Y') %>';

    $("#filtro_DataVencimentoDe").val(inicio);
    $("#filtro_DataVencimentoAte").val(fim);

    //$("#tableResults").dataTable().fnDraw();
    refreshDataTable();
}

function monthFilter() {
    inicio = '<%= Date.today.beginning_of_month.strftime('%d-%m-%Y') %>';
    fim = '<%= Date.today.end_of_month.strftime('%d-%m-%Y') %>';

    $("#filtro_DataVencimentoDe").val(inicio);
    $("#filtro_DataVencimentoAte").val(fim);

    //$("#tableResults").dataTable().fnDraw();
    refreshDataTable();
}

function yearFilter() {
    inicio = '<%= Date.today.beginning_of_year.strftime('%d-%m-%Y') %>';
    fim = '<%= Date.today.end_of_year.strftime('%d-%m-%Y') %>';

    $("#filtro_DataVencimentoDe").val(inicio);
    $("#filtro_DataVencimentoAte").val(fim);

    //$("#tableResults").dataTable().fnDraw();
    refreshDataTable();
}

function refreshDataTable() {
    $("#tableResults").dataTable().fnDraw();
}

function fnGetSelected( oTableLocal )
{
    alert("row selected")
    var aReturn = new Array();
    var aTrs = oTableLocal.fnGetNodes();

    for ( var i=0 ; i<aTrs.length ; i++ )
    {
        if ( $(aTrs[i]).hasClass('row_selected') )
        {
            aReturn.push( aTrs[i] );
        }
    }
    return aReturn;
}


/*******************************************************************************************
 *
 *
 *  PIPELINE TESTING
 *
 */
//
//var oCache = {
//    iCacheLower: -1
//};
//
//function fnSetKey( aoData, sKey, mValue )
//{
//    for ( var i=0, iLen=aoData.length ; i<iLen ; i++ )
//    {
//        if ( aoData[i].name == sKey )
//        {
//            aoData[i].value = mValue;
//        }
//    }
//}
//
//function fnGetKey( aoData, sKey )
//{
//    for ( var i=0, iLen=aoData.length ; i<iLen ; i++ )
//    {
//        if ( aoData[i].name == sKey )
//        {
//            return aoData[i].value;
//        }
//    }
//    return null;
//}
//
//function fnDataTablesPipeline ( sSource, aoData, fnCallback ) {
//    var iPipe = 5; /* Ajust the pipe size */
//
//    var bNeedServer = false;
//    var sEcho = fnGetKey(aoData, "sEcho");
//    var iRequestStart = fnGetKey(aoData, "iDisplayStart");
//    var iRequestLength = fnGetKey(aoData, "iDisplayLength");
//    var iRequestEnd = iRequestStart + iRequestLength;
//    oCache.iDisplayStart = iRequestStart;
//
//    /* outside pipeline? */
//    if ( oCache.iCacheLower < 0 || iRequestStart < oCache.iCacheLower || iRequestEnd > oCache.iCacheUpper )
//    {
//        bNeedServer = true;
//    }
//
//    /* sorting etc changed? */
//    if ( oCache.lastRequest && !bNeedServer )
//    {
//        for( var i=0, iLen=aoData.length ; i<iLen ; i++ )
//        {
//            if ( aoData[i].name != "iDisplayStart" && aoData[i].name != "iDisplayLength" && aoData[i].name != "sEcho" )
//            {
//                if ( aoData[i].value != oCache.lastRequest[i].value )
//                {
//                    bNeedServer = true;
//                    break;
//                }
//            }
//        }
//    }
//
//    /* Store the request for checking next time around */
//    oCache.lastRequest = aoData.slice();
//
//    if ( bNeedServer )
//    {
//        if ( iRequestStart < oCache.iCacheLower )
//        {
//            iRequestStart = iRequestStart - (iRequestLength*(iPipe-1));
//            if ( iRequestStart < 0 )
//            {
//                iRequestStart = 0;
//            }
//        }
//
//        oCache.iCacheLower = iRequestStart;
//        oCache.iCacheUpper = iRequestStart + (iRequestLength * iPipe);
//        oCache.iDisplayLength = fnGetKey( aoData, "iDisplayLength" );
//        fnSetKey( aoData, "iDisplayStart", iRequestStart );
//        fnSetKey( aoData, "iDisplayLength", iRequestLength*iPipe );
//
//        $.getJSON( sSource, aoData, function (json) {
//            /* Callback processing */
//            oCache.lastJson = jQuery.extend(true, {}, json);
//
//            if ( oCache.iCacheLower != oCache.iDisplayStart )
//            {
//                json.aaData.splice( 0, oCache.iDisplayStart-oCache.iCacheLower );
//            }
//            json.aaData.splice( oCache.iDisplayLength, json.aaData.length );
//
//            fnCallback(json);
//
//            /* Process extra params */
//            try
//            {
//                $("#majorTotalPlace").html("<p>" + json.majorTotal + "</p>");
//            }
//            catch(err)
//            {
//                $("#majorTotalPlace").html("<p>0</p>");
//            }
//        } );
//    }
//    else
//    {
//        json = jQuery.extend(true, {}, oCache.lastJson);
//        json.sEcho = sEcho; /* Update the echo for each response */
//        json.aaData.splice( 0, iRequestStart-oCache.iCacheLower );
//        json.aaData.splice( iRequestLength, json.aaData.length );
//        fnCallback(json);
//        return;
//    }
//}


/* *****************************************************************************




 $(document).ready(function() {
 /* Add a click handler to the rows - this could be used as a callback
 $("#example tbody tr").click( function( e ) {
 if ( $(this).hasClass('row_selected') ) {
 $(this).removeClass('row_selected');
 }
 else {
 oTable.$('tr.row_selected').removeClass('row_selected');
 $(this).addClass('row_selected');
 }
 });

 /* Add a click handler for the delete row
 $('#delete').click( function() {
 var anSelected = fnGetSelected( oTable );
 if ( anSelected.length !== 0 ) {
 oTable.fnDeleteRow( anSelected[0] );
 }
 } );

 /* Init the table
 oTable = $('#example').dataTable( );
 } );
 */


/* Get the rows which are currently selected */
function fnGetSelected(oTableLocal) {
    return oTableLocal.$('tr.row_selected');
}




//$(document).ready(function () {
//function montarDataTable(){
//    $('#filtro_descricao').data('nomeparametro', 'descricao');
//    $('#filtro_datavencimento').data('nomeparametro', 'datavencimento');
//    $('#filtro_dataacao').data('nomeparametro', 'dataacao');
//    $('#filtro_status').data('nomeparametro', 'status');
//    $('#filtro_valor').data('nomeparametro', 'valor');
//    $('#filtro_categoria').data('nomeparametro', 'categoria');
//    $('#filtro_centrodecusto').data('nomeparametro', 'centrodecusto');
//
//    $('#filtro_DataVencimentoDe').data('nomeparametro', 'datavencimentode');
//    $('#filtro_DataVencimentoAte').data('nomeparametro', 'datavencimentoate');
//    $('#filtro_DataCriacaoDe').data('nomeparametro', 'datacriacaode');
//    $('#filtro_DataCriacaoAte').data('nomeparametro', 'datacriacaoate');
//
//    $('#seletor_valor').data('nomeparametro', 'seletorvalor');
//    $('#hiddenReceita').data('nomeparametro', 'receita');
//    $('#hiddenDespesa').data('nomeparametro', 'despesa');
//    $('#hiddenReceita').data('valorparametro', 'S');
//    $('#hiddenDespesa').data('valorparametro', 'S');
//
//    $('#filtro_DataVencimentoDe').datepicker({
//        format: 'dd-mm-yyyy',
//        autoclose: true,
//        todaybtn: true,
//        showButtonPanel: true,
//        changeMonth: true,
//        changeYear: true
//    });
//
//    $('#filtro_DataVencimentoAte').datepicker({
//        format: 'dd-mm-yyyy',
//        autoclose: true,
//        todaybtn: true,
//        showButtonPanel: true,
//        changeMonth: true,
//        changeYear: true
//    });
//
//    $('#filtro_DataCriacaoDe').datepicker({
//        format: 'dd-mm-yyyy',
//        autoclose: true,
//        todaybtn: true,
//        showButtonPanel: true,
//        changeMonth: true,
//        changeYear: true
//    });
//
//    $('#filtro_DataCriacaoAte').datepicker({
//        format: 'dd-mm-yyyy',
//        autoclose: true,
//        todaybtn: true,
//        showButtonPanel: true,
//        changeMonth: true,
//        changeYear: true
//    });
//
//
//    $('#tableResults').dataTable({
//        'sPaginationType': 'full_numbers',
//        'aaSorting': [
//            [2, 'asc']
//        ],
//        'bJQueryUI': false,
//        'bProcessing': true,
//        'bAutoWidth': true,
//        'bDeferRender': true,
//
//        'sAjaxSource': '
//
//        sDom: '<"fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix"lfr>t<"fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix"ip><"clear">T',
//        //'sDom': '<"fg-toolbar ui-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix"lf><"table table-hover table-condensed dataTable"t><"fg-toolbar ui-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix"iTp>',
//        "oTableTools": {
//            "aButtons": [
//                {
//                    "sExtends": "xls",
//                    "sButtonText": "Exportar dados para o Excel",
//                    "sFileName": "*.xls",
//                    "mColumns": [1, 2, 4, 5, 6],
//                    "bFooter": true,
//                    "bHeader": true
//                }
//            ]
//        },
//        'oLanguage': {
//            "sLengthMenu": "Exibir _MENU_ lançamentos por página",
//            "sZeroRecords": "Nenhum registro encontrado",
//            "sInfo": "Exibindo _START_ de _END_. Total: _TOTAL_ lançamentos.",
//            "sInfoEmpty": "Exibindo 0 de 0. Total: 0 lançamentos",
//            "sSearch": "Refinar busca:",
//            "sInfoFiltered": "(filtrado de um total de _MAX_ lançamentos)",
//            "oPaginate": {
//                "sFirst": "<<",
//                "sLast": ">>",
//                "sNext": ">",
//                "sPrevious": "<"
//            }
//        }
//
//
//    });
//
//    //new FixedHeader( $("#tableResults") );
//
//    $('#botaoGrid').click
//    (
//            function () {
//                $('.filtro_parametro').each
//                (function () {
//                            $(this).removeData('valorparametro');
//                            $(this).val('');
//                        }
//                );
//
//                $('#hiddenReceita').data('valorparametro', 'S');
//                $('#hiddenDespesa').data('valorparametro', 'S');
//                $('#inputReceitas').prop('checked', true);
//                $('#inputDespesas').prop('checked', true);
//                buildfilter.call(this);
//            }
//    );
//
//    $('#inputReceitas').click
//    (
//            function () {
//                var receitasChecked;
//                var despesasChecked;
//
//                receitasChecked = $('#inputReceitas').is(':checked');
//                despesasChecked = $('#inputDespesas').is(':checked');
//
//                if (receitasChecked) {
//                    $('#hiddenReceita').data('valorparametro', 'S');
//                    buildfilter();
//                }
//                else {
//                    if (!despesasChecked) {
//                        //alert('Você precisa selecionar ao menos um tipo de valor.');
//                        $('#inputReceitas').prop('checked', true);
//                    }
//                    else {
//                        $('#hiddenReceita').data('valorparametro', 'N');
//                        buildfilter();
//                    }
//
//                }
//
//            }
//    );
//
//    $('#inputDespesas').click
//    (
//            function () {
//                var receitasChecked;
//                var despesasChecked;
//
//                receitasChecked = $('#inputReceitas').is(':checked');
//                despesasChecked = $('#inputDespesas').is(':checked');
//
//                if (despesasChecked) {
//                    $('#hiddenDespesa').data('valorparametro', 'S');
//                    buildfilter();
//
//                }
//                else {
//                    if (!receitasChecked) {
//                        //alert('Você precisa selecionar ao menos um tipo de valor.');
//                        $('#inputDespesas').prop('checked', true);
//
//                    }
//                    else {
//                        $('#hiddenDespesa').data('valorparametro', 'N');
//                        buildfilter();
//
//                    }
//
//                }
//
//            }
//    );
//
//    $('.filtro_parametro').change(function () {
//                if ($(this).prop('id') == 'filtro_valor') {
//                    $('#seletor_valor').data('valorparametro', $('#seletor_valor').val());
//                }
//
//                if ($(this).prop('id') == 'seletor_valor') {
//                    if ($.trim($('#filtro_valor').val()) == "") {
//                        $('#filtro_valor').focus();
//                        return;
//                    }
//                }
//
//                if ($.trim($(this).val()) != "") {
//                    $(this).data('valorparametro', $.trim($(this).val()));
//                }
//                else {
//                    $(this).removeData('valorparametro');
//                }
//                buildfilter.call(this);
//            }
//    )
////}); Fim do document ready (retornar com esse code quando acabarem os testes
//}
/*
 /*
 function buildfilter() {
 var href = "/filter?"

 $('.filtro_parametro').each(function () {

 if (typeof($(this).data('valorparametro')) !== "undefined") {
 href += $(this).data('nomeparametro') + "=" + $(this).data('valorparametro') + "&"
 }
 }
 );

 alert(href);
 $('#grid_results').html('Aguarde...');
 $.get(href, function (data) {
 $('#grid_results').html(data);

 insertQuitarEstornarCancelarEvent();
 insertOnClickResultEvent();
 $('#tableResults').dataTable({
 'sPaginationType': 'full_numbers',
 'aaSorting': [
 [2, 'asc']
 ],
 'bJQueryUI': true,
 'bProcessing': true,

 sDom: '<"fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix"lfr>t<"fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix"ip><"clear">T',
 //'sDom': '<"fg-toolbar ui-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix"lf><"table table-hover table-condensed dataTable"t><"fg-toolbar ui-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix"iTp>',
 "oTableTools": {
 "aButtons": [
 {
 "sExtends": "xls",
 "sButtonText": "Exportar dados para o Excel",
 "sFileName": "*.xls",
 "mColumns": [1, 2, 4, 5, 6],
 "bFooter": true,
 "bHeader": true
 }
 ]
 },
 'oLanguage': {
 "sLengthMenu": "Exibir _MENU_ lançamentos por página",
 "sZeroRecords": "Nenhum registro encontrado",
 "sInfo": "Exibindo _START_ de _END_. Total: _TOTAL_ lançamentos.",
 "sInfoEmpty": "Exibindo 0 de 0. Total: 0 lançamentos",
 "sSearch": "Refinar busca:",
 "sInfoFiltered": "(filtrado de um total de _MAX_ lançamentos)",
 "oPaginate": {
 "sFirst": "<<",
 "sLast": ">>",
 "sNext": ">",
 "sPrevious": "<"
 }
 }


 });
 }

 );


 }

 function insertOnClickResultEvent() {

 $('.resultsRow').click(

 function () {

 var id = $(this).prop('id').replace('edit_lancamento_row_', '');

 if ($(this).hasClass("info"))  //Marcar a tabela
 {
 $(this).removeClass("info");

 prepareForm();

 // O ajax causa a "perda" do efeito autoNumeric, por isso o mesmo deve ser refreshed
 $.ajax({
 url: "lancamentos/new",
 data: {}
 });

 prepareForm();

 $("#lancamento_valor").autoNumeric();
 $("#lancamento_valor").blur();

 }
 else {

 $('.resultsRow').removeClass("info");
 $(this).addClass("info");  //Desmarcar a parada
 //;
 $.ajax({
 url: "lancamentos/" + id + "/edit",
 data: {}
 });

 prepareForm();
 $("#lancamento_valor").autoNumeric();
 $("#lancamento_valor").blur();
 }


 }
 );

 }

 function insertPaginationEventNotif(link) {

 $('.pagination a').click(

 function () {
 var pagenumber = (RegExp('page=' + '(.+?)(&|$)').exec($(this).prop('href')) || [, null])[1];
 link += '&page=' + pagenumber;
 notification_build_filter(link);
 return false;
 }
 );
 }

 function notification_build_filter(link) {
 var href = "/filter?"

 href += link

 $('#grid_results').html('Aguarde...');
 $.get(href, function (data) {
 $('#grid_results').html(data);

 insertQuitarEstornarCancelarEvent();
 insertOnClickResultEvent();
 $('#tableResults').dataTable({
 'sPaginationType': 'full_numbers',
 'aaSorting': [
 [2, 'asc']
 ],
 'bJQueryUI': false,
 'bProcessing': true,
 'bAutoWidth': true,
 'bDeferRender': true,

 sDom: '<"fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix"lfr>t<"fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix"ip><"clear">T',
 //'sDom': '<"fg-toolbar ui-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix"lf><"table table-hover table-condensed dataTable"t><"fg-toolbar ui-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix"iTp>',
 "oTableTools": {
 "aButtons": [
 {
 "sExtends": "xls",
 "sButtonText": "Exportar dados para o Excel",
 "sFileName": "*.xls",
 "mColumns": [1, 2, 4, 5, 6],
 "bFooter": true,
 "bHeader": true
 }
 ]
 },
 'oLanguage': {
 "sLengthMenu": "Exibir _MENU_ lançamentos por página",
 "sZeroRecords": "Nenhum registro encontrado",
 "sInfo": "Exibindo _START_ de _END_. Total: _TOTAL_ lançamentos.",
 "sInfoEmpty": "Exibindo 0 de 0. Total: 0 lançamentos",
 "sInfoFiltered": "(filtrado de um total de _MAX_ lançamentos)",
 "sSearch": "Refinar busca:",
 "oPaginate": {
 "sFirst": "<<",
 "sLast": ">>",
 "sNext": ">",
 "sPrevious": "<"
 }
 }
 });
 }
 );
 }

 function updateRowTable(id) {
 //Essa função localiza pela row que contém o ID e obtém da base de dados o valor.
 //Obter o valor usando ajax

 //Obter os dados do banco utilizando JSON. Preciso criar um controller para isso, para retornar o meu JSON

 alert(id);
 }


 function insertQuitarEstornarCancelarEvent() {
 $('.quitar_button').click(function () {
 td = $(this).parent();
 tr = td.parent();

 var id = tr.prop('id').replace('edit_lancamento_row_', '');
 var rowindex = $("#tableResults").dataTable().fnGetPosition($(this).closest("tr").get(0));
 //$("#tableResults").dataTable().fnDeleteRow(rowindex);

 $.ajax({
 type: "PUT",
 //url: "lancamentos/quitar?id="+id,
 url: "lancamentos/" + id + "/quitar"
 }


 ).done(function (msg) {

 if ($('#filtro_status :selected').text() == 'Aberto') {
 $("#tableResults").dataTable().fnDeleteRow(rowindex);
 }
 else {
 $("#tableResults").dataTable().fnUpdate('quitado', rowindex, 7, false);
 }

 }

 );

 });

 $('.estornar_button').click(function () {
 td = $(this).parent();
 tr = td.parent();

 var id = tr.prop('id').replace('edit_lancamento_row_', '');
 var rowindex = $("#tableResults").dataTable().fnGetPosition($(this).closest("tr").get(0));

 $.ajax({
 type: "PUT",
 //url: "lancamentos/quitar?id="+id,
 url: "lancamentos/" + id + "/estornar"
 }


 ).done(function (msg) {

 if ($('#filtro_status :selected').text() == 'Quitado') {
 $("#tableResults").dataTable().fnDeleteRow(rowindex);
 }
 else {
 $("#tableResults").dataTable().fnUpdate('estornado', rowindex, 7, false);
 }


 }

 );


 });

 $('.cancelar_button').click(function () {

 td = $(this).parent();
 tr = td.parent();

 var id = tr.prop('id').replace('edit_lancamento_row_', '');
 var rowindex = $("#tableResults").dataTable().fnGetPosition($(this).closest("tr").get(0));
 //$("#tableResults").dataTable().fnDeleteRow(rowindex);

 $.ajax({
 type: "PUT",
 //url: "lancamentos/quitar?id="+id,
 url: "lancamentos/" + id + "/cancelar"
 }
 ).done(function (msg) {

 if ($('#filtro_status :selected').text() == 'Aberto') {
 $("#tableResults").dataTable().fnDeleteRow(rowindex);
 }
 else {
 $("#tableResults").dataTable().fnUpdate('cancelado', rowindex, 7, false);
 }
 }
 );

 });
 }
 */