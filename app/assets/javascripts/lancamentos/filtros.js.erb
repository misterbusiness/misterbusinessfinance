/**
 * Created with JetBrains RubyMine.
 * User: administrator
 * Date: 25/06/13
 * Time: 20:59
 * To change this template use File | Settings | File Templates.
 */

$(document).ready(function () {
    $("#filtro_command").val("default_filter");
    buildDataTable();
});

function buildDataTable() {
    /// Initialize filter controls
    try {
        $("#filtro_receita").val("N");
        $("#filtro_despesa").val("N");

        var fDataVencimentoIni = $('#filtro_DataVencimentoDe').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
            todaybtn: true,
            showButtonPanel: true,
            changeMonth: true,
            changeYear: true
        });

        var fDataVencimentoEnd = $('#filtro_DataVencimentoAte').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
            todaybtn: true,
            showButtonPanel: true,
            changeMonth: true,
            changeYear: true
        });

        var fDataAcaoIni = $('#filtro_DataAcaoDe').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
            todaybtn: true,
            showButtonPanel: true,
            changeMonth: true,
            changeYear: true
        });

        var fDataAcaoEnd = $('#filtro_DataAcaoAte').datepicker({
            format: 'dd-mm-yyyy',
            autoclose: true,
            todaybtn: true,
            showButtonPanel: true,
            changeMonth: true,
            changeYear: true
        });

        var fCategoria = $("#filtro_cateogira");

        var fCentrodeCusto = $("#filtro_centrodecusto");

        var fStatus = $("#filtro_status");

        var fValor = $("#filtro_valor");
        try {
            var oTable = $("#tableResults").dataTable({
                "sDom": "t<lp><i>T<r>",
                "aaSorting": [
                    [4, 'asc']
                ],
                "bSort": true,
                "bJQueryUI": false,
                "bSearchable": true,
                "bRegex": true,
                "bStateSave": true,
                "sPaginationType": 'full_numbers',
                "bServerSide": true,
                "bProcessing": true,
                "bDeferRender": true,
                "sAjaxSource": '<%= Rails.application.routes.url_helpers.filter_path %>',
                "sAjaxDataProp": "aaData",
                "fnServerParams": function (aoData) {
                    aoData.push({ "name": "filtro_command", "value": $("#filtro_command").val()});
                    aoData.push({ "name": "filtro_descricao", "value": $("#filtro_descricao").val()});
                    aoData.push({ "name": "filtro_vencimento_ini", "value": $("#filtro_DataVencimentoDe").val()});
                    aoData.push({ "name": "filtro_vencimento_final", "value": $("#filtro_DataVencimentoAte").val()});
                    aoData.push({ "name": "filtro_receita", "value": $("#filtro_receita").val()});
                    aoData.push({ "name": "filtro_despesa", "value": $("#filtro_despesa").val()});
                    aoData.push({ "name": "filtro_valor", "value": $("#filtro_valor").val()});
                    aoData.push({ "name": "filtro_categoria", "value": $("#filtro_categoria").val()});
                    aoData.push({ "name": "filtro_centrodecusto", "value": $("#filtro_centrodecusto").val()});
                    aoData.push({ "name": "filtro_status", "value": $("#filtro_status").val()});
                },
                "fnServerData": serverData,
                "oTableTools": {
                    "sRowSelect": "single",
                    "sSwfPath": "http://localhost:3000/swf/copy_csv_xls_pdf.swf",
                    "fnRowSelected": function (nodes) {
                        var rowid = (nodes[0].id).substring(("lancamento_").length)

                        if(rowid != "")
                        {
                            $.get("/lancamentos/" + rowid + "/edit")
                        }
                    },
                    "fnRowDeselected": function (nodes) {
                        $.get("<%= Rails.application.routes.url_helpers.new_lancamento_path %>")
                    },
                    "aButtons": [
                        {
                            "sExtends": "xls",
                            "sButtonText": "Exportar dados para o Excel",
                            "sFileName": "*.xls",
                            "mColumns": [4, 5, 6, 7, 8],
                            "bFooter": true,
                            "bHeader": true
                        }
                    ]
                },
                "aoColumns": [
                    {"mData": "estornar_format", "bSortable": false},
                    {"mData": "quitar_format", "bSortable": false},
                    {"mData": "cancelar_format", "bSortable": false},
                    {"mData": "descricao_format", "bSortable": true},
                    {"mData": "datavencimento_format", "bSortable": true},
                    {"mData": "valor_format", "bSortable": true},
                    {"mData": "category_format", "bSortable": true},
                    {"mData": "centrodecusto_format", "bSortable": true},
                    {"mData": "status_format", "bSortable": true},
                    {"mData": "dataacao_format", "bSortable": true}
                ],
                "oLanguage": {
                    "sLengthMenu": "Exibir _MENU_ lançamentos por página",
                    "sZeroRecords": "Nenhum registro encontrado",
                    "sInfo": "Exibindo _START_ de _END_. Total: _TOTAL_ lançamentos.",
                    "sInfoEmpty": "Exibindo 0 de 0. Total: 0 lançamentos",
                    "sSearch": "Refinar busca:",
                    "sInfoFiltered": "(filtrado de um total de _MAX_ lançamentos)",
                    "oPaginate": {
                        "sFirst": "<<",
                        "sLast": ">>",
                        "sNext": ">",
                        "sPrevious": "<"
                    }
                }
            });

            //new FixedHeader( oTable );
        }
        catch (err) {
            var txt = "There was an error on this page.\n\n";
            txt += "Error description: " + err.message + "\n\n";
            txt += "Click OK to continue.\n\n";
            alert(txt);
        }
        $('th').unbind('click.sorting');

        $("#filtro_status").select2();
        $("#filtro_categoria").select2();
        $("#filtro_centrodecusto").select2();

        oTable.$('tr').click(function () {
            alert("clickcli");
            var data = oTable.fnGetData(this);
        });

        fDataVencimentoIni.change(function () {
            oTable.fnDraw();
        });

        fDataVencimentoEnd.change(function () {
            oTable.fnDraw();
        });

        fValor.change(function () {
            oTable.fnDraw();
        });

        fCategoria.change(function () {
            oTable.fnDraw();
        });

        fCentrodeCusto.change(function () {
            oTable.fnDraw();
        });

        fStatus.change(function () {
            oTable.fnDraw();
        });
    }
    catch (err) {
        var txt = "There was an error on this page.\n\n";
        txt += "Error description: " + err.message + "\n\n";
        txt += "Click OK to continue.\n\n";
        alert(txt);
    }
}

/******************************************************************************************
 * Função utilizada para gerenciar mais parametros enviados pelo servidor
 *****************************************************************************************/
function serverData(sSource, aoData, fnCallback) {
    $.getJSON(sSource, aoData, function (json) {
        fnCallback(json);

        /* Process remaining json params */
        $("#majorTotalPlace").html("<p>" + json.majorTotal + "</p>");

        return;
    });
}

var hlr = 0;   // Reference to the currently highlighted row

function rowClick() {
    if (hlr)
        $("td:first", hlr).parent().children().each(function () {
            $(this).removeClass('mister-table-row-selected');
        });
    hlr = this;
    $("td:first", this).parent().children().each(function () {
        $(this).addClass('mister-table-row-selected');
    });
}

function defaultFilter() {
    $("#filtro_DataVencimentoDe").val("");
    $("#filtro_DataVencimentoAte").val("");
    $("#filtro_descricao").val("");
    $("#filtro_command").val("default_filter");

    refreshDataTable();
}

function defaultSort() {
    $("#filtro_command").val("default_sort");
    //$("#tableResults").dataTable().fnDraw();
    refreshDataTable();
}

function receitaFilter() {
    var fReceita = $("#filtro_receita");
    if (fReceita.val() == "S") {
        fReceita.val("N");
    }
    else {
        fReceita.val("S");
    }

    //$("#tableResults").dataTable().fnDraw();
    refreshDataTable();
}

function despesaFilter() {
    var fDespesa = $("#filtro_despesa");
    if (fDespesa.val() == "S") {
        fDespesa.val("N");
    }
    else {
        fDespesa.val("S");
    }

    //$("#tableResults").dataTable().fnDraw();
    refreshDataTable();
}

function todayFilter() {
    inicio = '<%= Date.today.strftime('%d-%m-%Y') %>';
    fim = '<%= Date.today.strftime('%d-%m-%Y') %>';

    $("#filtro_DataVencimentoDe").val(inicio);
    $("#filtro_DataVencimentoAte").val(fim);

    //$("#tableResults").dataTable().fnDraw();
    refreshDataTable();
}

function weekFilter() {
    inicio = '<%= Date.today.beginning_of_week.strftime('%d-%m-%Y') %>';
    fim = '<%= Date.today.end_of_week.strftime('%d-%m-%Y') %>';

    $("#filtro_DataVencimentoDe").val(inicio);
    $("#filtro_DataVencimentoAte").val(fim);

    //$("#tableResults").dataTable().fnDraw();
    refreshDataTable();
}

function monthFilter() {
    inicio = '<%= Date.today.beginning_of_month.strftime('%d-%m-%Y') %>';
    fim = '<%= Date.today.end_of_month.strftime('%d-%m-%Y') %>';

    $("#filtro_DataVencimentoDe").val(inicio);
    $("#filtro_DataVencimentoAte").val(fim);

    //$("#tableResults").dataTable().fnDraw();
    refreshDataTable();
}

function yearFilter() {
    inicio = '<%= Date.today.beginning_of_year.strftime('%d-%m-%Y') %>';
    fim = '<%= Date.today.end_of_year.strftime('%d-%m-%Y') %>';

    $("#filtro_DataVencimentoDe").val(inicio);
    $("#filtro_DataVencimentoAte").val(fim);

    //$("#tableResults").dataTable().fnDraw();
    refreshDataTable();
}

function refreshDataTable() {
    $("#tableResults").dataTable().fnDraw();
}


//$(document).ready(function () {
//function montarDataTable(){
//    $('#filtro_descricao').data('nomeparametro', 'descricao');
//    $('#filtro_datavencimento').data('nomeparametro', 'datavencimento');
//    $('#filtro_dataacao').data('nomeparametro', 'dataacao');
//    $('#filtro_status').data('nomeparametro', 'status');
//    $('#filtro_valor').data('nomeparametro', 'valor');
//    $('#filtro_categoria').data('nomeparametro', 'categoria');
//    $('#filtro_centrodecusto').data('nomeparametro', 'centrodecusto');
//
//    $('#filtro_DataVencimentoDe').data('nomeparametro', 'datavencimentode');
//    $('#filtro_DataVencimentoAte').data('nomeparametro', 'datavencimentoate');
//    $('#filtro_DataCriacaoDe').data('nomeparametro', 'datacriacaode');
//    $('#filtro_DataCriacaoAte').data('nomeparametro', 'datacriacaoate');
//
//    $('#seletor_valor').data('nomeparametro', 'seletorvalor');
//    $('#hiddenReceita').data('nomeparametro', 'receita');
//    $('#hiddenDespesa').data('nomeparametro', 'despesa');
//    $('#hiddenReceita').data('valorparametro', 'S');
//    $('#hiddenDespesa').data('valorparametro', 'S');
//
//    $('#filtro_DataVencimentoDe').datepicker({
//        format: 'dd-mm-yyyy',
//        autoclose: true,
//        todaybtn: true,
//        showButtonPanel: true,
//        changeMonth: true,
//        changeYear: true
//    });
//
//    $('#filtro_DataVencimentoAte').datepicker({
//        format: 'dd-mm-yyyy',
//        autoclose: true,
//        todaybtn: true,
//        showButtonPanel: true,
//        changeMonth: true,
//        changeYear: true
//    });
//
//    $('#filtro_DataCriacaoDe').datepicker({
//        format: 'dd-mm-yyyy',
//        autoclose: true,
//        todaybtn: true,
//        showButtonPanel: true,
//        changeMonth: true,
//        changeYear: true
//    });
//
//    $('#filtro_DataCriacaoAte').datepicker({
//        format: 'dd-mm-yyyy',
//        autoclose: true,
//        todaybtn: true,
//        showButtonPanel: true,
//        changeMonth: true,
//        changeYear: true
//    });
//
//
//    $('#tableResults').dataTable({
//        'sPaginationType': 'full_numbers',
//        'aaSorting': [
//            [2, 'asc']
//        ],
//        'bJQueryUI': false,
//        'bProcessing': true,
//        'bAutoWidth': true,
//        'bDeferRender': true,
//
//        'sAjaxSource': '
//
//        sDom: '<"fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix"lfr>t<"fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix"ip><"clear">T',
//        //'sDom': '<"fg-toolbar ui-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix"lf><"table table-hover table-condensed dataTable"t><"fg-toolbar ui-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix"iTp>',
//        "oTableTools": {
//            "aButtons": [
//                {
//                    "sExtends": "xls",
//                    "sButtonText": "Exportar dados para o Excel",
//                    "sFileName": "*.xls",
//                    "mColumns": [1, 2, 4, 5, 6],
//                    "bFooter": true,
//                    "bHeader": true
//                }
//            ]
//        },
//        'oLanguage': {
//            "sLengthMenu": "Exibir _MENU_ lançamentos por página",
//            "sZeroRecords": "Nenhum registro encontrado",
//            "sInfo": "Exibindo _START_ de _END_. Total: _TOTAL_ lançamentos.",
//            "sInfoEmpty": "Exibindo 0 de 0. Total: 0 lançamentos",
//            "sSearch": "Refinar busca:",
//            "sInfoFiltered": "(filtrado de um total de _MAX_ lançamentos)",
//            "oPaginate": {
//                "sFirst": "<<",
//                "sLast": ">>",
//                "sNext": ">",
//                "sPrevious": "<"
//            }
//        }
//
//
//    });
//
//    //new FixedHeader( $("#tableResults") );
//
//    $('#botaoGrid').click
//    (
//            function () {
//                $('.filtro_parametro').each
//                (function () {
//                            $(this).removeData('valorparametro');
//                            $(this).val('');
//                        }
//                );
//
//                $('#hiddenReceita').data('valorparametro', 'S');
//                $('#hiddenDespesa').data('valorparametro', 'S');
//                $('#inputReceitas').prop('checked', true);
//                $('#inputDespesas').prop('checked', true);
//                buildfilter.call(this);
//            }
//    );
//
//    $('#inputReceitas').click
//    (
//            function () {
//                var receitasChecked;
//                var despesasChecked;
//
//                receitasChecked = $('#inputReceitas').is(':checked');
//                despesasChecked = $('#inputDespesas').is(':checked');
//
//                if (receitasChecked) {
//                    $('#hiddenReceita').data('valorparametro', 'S');
//                    buildfilter();
//                }
//                else {
//                    if (!despesasChecked) {
//                        //alert('Você precisa selecionar ao menos um tipo de valor.');
//                        $('#inputReceitas').prop('checked', true);
//                    }
//                    else {
//                        $('#hiddenReceita').data('valorparametro', 'N');
//                        buildfilter();
//                    }
//
//                }
//
//            }
//    );
//
//    $('#inputDespesas').click
//    (
//            function () {
//                var receitasChecked;
//                var despesasChecked;
//
//                receitasChecked = $('#inputReceitas').is(':checked');
//                despesasChecked = $('#inputDespesas').is(':checked');
//
//                if (despesasChecked) {
//                    $('#hiddenDespesa').data('valorparametro', 'S');
//                    buildfilter();
//
//                }
//                else {
//                    if (!receitasChecked) {
//                        //alert('Você precisa selecionar ao menos um tipo de valor.');
//                        $('#inputDespesas').prop('checked', true);
//
//                    }
//                    else {
//                        $('#hiddenDespesa').data('valorparametro', 'N');
//                        buildfilter();
//
//                    }
//
//                }
//
//            }
//    );
//
//    $('.filtro_parametro').change(function () {
//                if ($(this).prop('id') == 'filtro_valor') {
//                    $('#seletor_valor').data('valorparametro', $('#seletor_valor').val());
//                }
//
//                if ($(this).prop('id') == 'seletor_valor') {
//                    if ($.trim($('#filtro_valor').val()) == "") {
//                        $('#filtro_valor').focus();
//                        return;
//                    }
//                }
//
//                if ($.trim($(this).val()) != "") {
//                    $(this).data('valorparametro', $.trim($(this).val()));
//                }
//                else {
//                    $(this).removeData('valorparametro');
//                }
//                buildfilter.call(this);
//            }
//    )
////}); Fim do document ready (retornar com esse code quando acabarem os testes
//}
/*
 /*
 function buildfilter() {
 var href = "/filter?"

 $('.filtro_parametro').each(function () {

 if (typeof($(this).data('valorparametro')) !== "undefined") {
 href += $(this).data('nomeparametro') + "=" + $(this).data('valorparametro') + "&"
 }
 }
 );

 alert(href);
 $('#grid_results').html('Aguarde...');
 $.get(href, function (data) {
 $('#grid_results').html(data);

 insertQuitarEstornarCancelarEvent();
 insertOnClickResultEvent();
 $('#tableResults').dataTable({
 'sPaginationType': 'full_numbers',
 'aaSorting': [
 [2, 'asc']
 ],
 'bJQueryUI': true,
 'bProcessing': true,

 sDom: '<"fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix"lfr>t<"fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix"ip><"clear">T',
 //'sDom': '<"fg-toolbar ui-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix"lf><"table table-hover table-condensed dataTable"t><"fg-toolbar ui-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix"iTp>',
 "oTableTools": {
 "aButtons": [
 {
 "sExtends": "xls",
 "sButtonText": "Exportar dados para o Excel",
 "sFileName": "*.xls",
 "mColumns": [1, 2, 4, 5, 6],
 "bFooter": true,
 "bHeader": true
 }
 ]
 },
 'oLanguage': {
 "sLengthMenu": "Exibir _MENU_ lançamentos por página",
 "sZeroRecords": "Nenhum registro encontrado",
 "sInfo": "Exibindo _START_ de _END_. Total: _TOTAL_ lançamentos.",
 "sInfoEmpty": "Exibindo 0 de 0. Total: 0 lançamentos",
 "sSearch": "Refinar busca:",
 "sInfoFiltered": "(filtrado de um total de _MAX_ lançamentos)",
 "oPaginate": {
 "sFirst": "<<",
 "sLast": ">>",
 "sNext": ">",
 "sPrevious": "<"
 }
 }


 });
 }

 );


 }

 function insertOnClickResultEvent() {

 $('.resultsRow').click(

 function () {

 var id = $(this).prop('id').replace('edit_lancamento_row_', '');

 if ($(this).hasClass("info"))  //Marcar a tabela
 {
 $(this).removeClass("info");

 prepareForm();

 // O ajax causa a "perda" do efeito autoNumeric, por isso o mesmo deve ser refreshed
 $.ajax({
 url: "lancamentos/new",
 data: {}
 });

 prepareForm();

 $("#lancamento_valor").autoNumeric();
 $("#lancamento_valor").blur();

 }
 else {

 $('.resultsRow').removeClass("info");
 $(this).addClass("info");  //Desmarcar a parada
 //;
 $.ajax({
 url: "lancamentos/" + id + "/edit",
 data: {}
 });

 prepareForm();
 $("#lancamento_valor").autoNumeric();
 $("#lancamento_valor").blur();
 }


 }
 );

 }

 function insertPaginationEventNotif(link) {

 $('.pagination a').click(

 function () {
 var pagenumber = (RegExp('page=' + '(.+?)(&|$)').exec($(this).prop('href')) || [, null])[1];
 link += '&page=' + pagenumber;
 notification_build_filter(link);
 return false;
 }
 );
 }

 function notification_build_filter(link) {
 var href = "/filter?"

 href += link

 $('#grid_results').html('Aguarde...');
 $.get(href, function (data) {
 $('#grid_results').html(data);

 insertQuitarEstornarCancelarEvent();
 insertOnClickResultEvent();
 $('#tableResults').dataTable({
 'sPaginationType': 'full_numbers',
 'aaSorting': [
 [2, 'asc']
 ],
 'bJQueryUI': false,
 'bProcessing': true,
 'bAutoWidth': true,
 'bDeferRender': true,

 sDom: '<"fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix"lfr>t<"fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix"ip><"clear">T',
 //'sDom': '<"fg-toolbar ui-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix"lf><"table table-hover table-condensed dataTable"t><"fg-toolbar ui-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix"iTp>',
 "oTableTools": {
 "aButtons": [
 {
 "sExtends": "xls",
 "sButtonText": "Exportar dados para o Excel",
 "sFileName": "*.xls",
 "mColumns": [1, 2, 4, 5, 6],
 "bFooter": true,
 "bHeader": true
 }
 ]
 },
 'oLanguage': {
 "sLengthMenu": "Exibir _MENU_ lançamentos por página",
 "sZeroRecords": "Nenhum registro encontrado",
 "sInfo": "Exibindo _START_ de _END_. Total: _TOTAL_ lançamentos.",
 "sInfoEmpty": "Exibindo 0 de 0. Total: 0 lançamentos",
 "sInfoFiltered": "(filtrado de um total de _MAX_ lançamentos)",
 "sSearch": "Refinar busca:",
 "oPaginate": {
 "sFirst": "<<",
 "sLast": ">>",
 "sNext": ">",
 "sPrevious": "<"
 }
 }
 });
 }
 );
 }

 function updateRowTable(id) {
 //Essa função localiza pela row que contém o ID e obtém da base de dados o valor.
 //Obter o valor usando ajax

 //Obter os dados do banco utilizando JSON. Preciso criar um controller para isso, para retornar o meu JSON

 alert(id);
 }


 function insertQuitarEstornarCancelarEvent() {
 $('.quitar_button').click(function () {
 td = $(this).parent();
 tr = td.parent();

 var id = tr.prop('id').replace('edit_lancamento_row_', '');
 var rowindex = $("#tableResults").dataTable().fnGetPosition($(this).closest("tr").get(0));
 //$("#tableResults").dataTable().fnDeleteRow(rowindex);

 $.ajax({
 type: "PUT",
 //url: "lancamentos/quitar?id="+id,
 url: "lancamentos/" + id + "/quitar"
 }


 ).done(function (msg) {

 if ($('#filtro_status :selected').text() == 'Aberto') {
 $("#tableResults").dataTable().fnDeleteRow(rowindex);
 }
 else {
 $("#tableResults").dataTable().fnUpdate('quitado', rowindex, 7, false);
 }

 }

 );

 });

 $('.estornar_button').click(function () {
 td = $(this).parent();
 tr = td.parent();

 var id = tr.prop('id').replace('edit_lancamento_row_', '');
 var rowindex = $("#tableResults").dataTable().fnGetPosition($(this).closest("tr").get(0));

 $.ajax({
 type: "PUT",
 //url: "lancamentos/quitar?id="+id,
 url: "lancamentos/" + id + "/estornar"
 }


 ).done(function (msg) {

 if ($('#filtro_status :selected').text() == 'Quitado') {
 $("#tableResults").dataTable().fnDeleteRow(rowindex);
 }
 else {
 $("#tableResults").dataTable().fnUpdate('estornado', rowindex, 7, false);
 }


 }

 );


 });

 $('.cancelar_button').click(function () {

 td = $(this).parent();
 tr = td.parent();

 var id = tr.prop('id').replace('edit_lancamento_row_', '');
 var rowindex = $("#tableResults").dataTable().fnGetPosition($(this).closest("tr").get(0));
 //$("#tableResults").dataTable().fnDeleteRow(rowindex);

 $.ajax({
 type: "PUT",
 //url: "lancamentos/quitar?id="+id,
 url: "lancamentos/" + id + "/cancelar"
 }
 ).done(function (msg) {

 if ($('#filtro_status :selected').text() == 'Aberto') {
 $("#tableResults").dataTable().fnDeleteRow(rowindex);
 }
 else {
 $("#tableResults").dataTable().fnUpdate('cancelado', rowindex, 7, false);
 }
 }
 );

 });
 }
 */